import{n as r}from"../../_plugin-vue2_normalizer.7b9a2fe2.js";import{e as l}from"../../vendor/vendor-bootstrap-vue.17129278.js";import"../../vendor/vendor-others.c8ba1624.js";import"../../vendor/vendor-core.3574f8d9.js";const n={inheritAttrs:!1,name:"base-textarea",components:{BFormTextarea:l},props:{required:{type:Boolean,description:"Whether input is required (adds an asterix *)"},valid:{type:Boolean,description:"Whether is valid",default:void 0},alternative:{type:Boolean,description:"Whether input is of alternative layout"},native:{type:Boolean,description:"Whether input is of material layout"},label:{type:String,description:"Input label (text before input)"},placeholder:{type:String,description:"Input placeholder (text on input)"},error:{type:String,description:"Input error (below input)"},wrapperClasses:{type:String,description:"Input label css classes"},labelClasses:{type:String,description:"Input label css classes"},inputClasses:{type:String,description:"Input css classes"},value:{type:[String,Number],description:"Input value"},autoFocus:{type:Boolean,description:"if autofocus is on",default:void 0},charCount:{type:Boolean,default:!1},charCountLabel:{type:String,default:"Characters"},lineCount:{type:Boolean,default:!1},lineCountLabel:{type:String}},data(){return{cbId:"",focused:!1,taValue:""}},computed:{slotData(){return{taValue:this.value,focused:this.focused}},charsCounted(){return this.value?this.value.length:0},linesCounted(){return this.value?this.value.lineCount():0}},methods:{updateValue(a){this.$emit("update:error",""),this.$emit("input",a)},onFocus(a){this.focused=!0,this.$emit("focus",a)},onBlur(a){this.focused=!1,this.$emit("blur",a)}},mounted(){this.autoFocus&&this.$refs[`base-textarea-${this.$attrs.name?this.$attrs.name:this.cbId}`].focus()},created(){this.cbId=Math.random().toString(16).slice(2)}};var o=function(){var e=this,t=e._self._c;return t("div",{staticClass:"base-textarea"},[t("div",{staticClass:"form-group",class:[{focused:e.focused},{"input-group-alternative":e.alternative&&!e.native},{"input-group-material":!(e.native||e.alternative)},{"has-label":e.label||e.$slots.label},{"has-placeholder":e.placeholder},{"has-success":e.valid===!0},{"has-danger":e.error||e.valid===!1},{"not-empty":e.slotData.taValue&&e.slotData.taValue.length},{required:e.required},e.wrapperClasses]},[e._t("label",function(){return[e.label?t("label",{class:e.labelClasses,attrs:{for:`base-textarea-${e.$attrs.name?e.$attrs.name:e.cbId}`}},[e._v(" "+e._s(e.label)+" "),e.required?t("span",{staticClass:"required-asterix"},[e._v("*")]):e._e(),e.charCount?t("span",{staticClass:"bracketed"},[e._v(e._s(e.charsCounted)+" "+e._s(e.charCountLabel))]):e._e(),e.lineCount?t("span",{staticClass:"bracketed"},[e._v(e._s(e.linesCounted)+" "+e._s(e.lineCountLabel))]):e._e()]):e._e()]}),e._t("default",function(){return[t("b-form-textarea",e._b({directives:[{name:"auto-focus",rawName:"v-auto-focus",value:e.autoFocus,expression:"autoFocus"}],ref:`base-textarea-${e.$attrs.name?e.$attrs.name:e.cbId}`,staticClass:"form-control",class:[{"is-valid":e.valid===!0},{"is-invalid":e.valid===!1},e.inputClasses],attrs:{id:`base-textarea-${e.$attrs.name?e.$attrs.name:e.cbId}`,autofocus:e.autoFocus,placeholder:e.placeholder},on:{input:e.updateValue},nativeOn:{focus:function(s){return e.onFocus.apply(null,arguments)},blur:function(s){return e.onBlur.apply(null,arguments)}},model:{value:e.slotData.taValue,callback:function(s){e.$set(e.slotData,"taValue",s)},expression:"slotData.taValue"}},"b-form-textarea",e.$attrs,!1))]},null,e.slotData)],2),e._t("infoBlock"),e._t("errorBlock",function(){return[e.error?t("div",{staticClass:"text-danger invalid-feedback error-block mt-1"},[e._v(" "+e._s(e.error)+" ")]):e._e()]})],2)},i=[],u=r(n,o,i,!1,null,null,null,null);const h=u.exports;export{h as default};
