import{m as r,i as d}from"./vendor/vendor-core.3574f8d9.js";import{s as h}from"./index.d951cdc8.js";import{f as l,c as w,S as n,u as p}from"./app.a373aa59.js";import{p as f,a as g}from"./media.60d422e2.js";import"./vendor/vendor-essential.91b5cfa2.js";import{E as c}from"./event-bus.6a5776a8.js";import{C as m}from"./index.d9f9f0a3.js";const T={components:{ChatBox:m},data(){return{subscriptions:{},isChatBoxShown:!1,isWindowFocused:!0,socketURL:"aHR0cHM6Ly9zaWduYWwua29kZW1pbnQuaW46OTAwMS8=",meetingLink:null,meetingExternalLink:null,showMeetingIframe:!1}},computed:{...r("config",["configs","uiConfigs","vars"]),...r("user",["loggedInUser","liveUsers"]),...r("chat",["roomsPageMeta","totalUnreadMessages","chatBoxLoaded"]),loggedInUserSmall(){return{uuid:this.loggedInUser.uuid,username:this.loggedInUser.username,profile:this.loggedInUser.profile}}},watch:{liveMembersCount(i,e){!window.isLiveMeetingDestroyed&&i!==e&&this.meetingRoomCreated(this.entity)}},methods:{...d("common",["Custom"]),...d("user",["SetLastActivity","SetLiveUsers","AddLiveUser","RemoveLiveUser","UpdateLiveUser","ResetLiveUsers"]),...d("chat",["GetRooms","MessageReceived","ResetTotalUnreadCount"]),showChatBox(){this.$gaEvent("engagement","showChatBox"),this.isChatBoxShown=!0,this.ResetTotalUnreadCount()},toggleChatBox(){this.$gaEvent("engagement","toggleChatBox"),this.isChatBoxShown=!this.isChatBoxShown},afterJoiningUsersChannel(i){this.ResetLiveUsers(),this.SetLiveUsers(l(i))},userIsOnline(i){this.liveUsers.findIndex(e=>e.uuid===i.uuid)!==-1&&this.RemoveLiveUser(i),this.AddLiveUser(l(i))},userIsOffline(i){window.callTo&&this.callDroppedNotification({from:this.loggedInUserSmall,to:i}),this.RemoveLiveUser(i)},updateOnlineUser(i){this.UpdateLiveUser(l(i))},setUserStatus(i=!1,e=null){this.UpdateLiveUser({...this.loggedInUserSmall,busy:i,timerToFalse:e}),this.subscriptions.users.whisper("SetUserStatus",{...this.loggedInUserSmall,busy:i})},newMessageReceived(i){if(!(!i||!(this.configs.chat&&this.configs.chat.enabled))&&(i=l(i),i&&i.user&&i.user.uuid!==this.loggedInUser.uuid)){if(this.MessageReceived(i),this.configs.chat.muteSoundNotification)return;(!this.isChatBoxShown||this.isChatBoxShown&&!this.isWindowFocused)&&f()}},startChatWith(i){this.configs.chat&&this.configs.chat.enabled&&!this.isChatBoxShown&&(this.isChatBoxShown=!0)},incomingCallNotification({from:i,to:e,id:t}){if(e.uuid!==this.uuid)return;window.callPlaying=g();const s={title:$t("chat.is_calling",{attribute:i.profile.name}),confirmButtonText:$t("chat.accept"),cancelButtonText:$t("chat.decline"),showCancelButton:!0,onOpen:o=>{o.addEventListener("mouseenter",()=>{window.callPlaying&&window.callPlaying.pause()})},position:this.$toastConfig&&this.$toastConfig.position?this.$toastConfig.position.replace("-center","").replace("start","left").replace("end","right"):"bottom-end"};this.$toasted.clear(),this.setUserStatus("GETTING_CALLED"),window.callFrom=i,w.fire(s).then(o=>{window.callPlaying&&window.callPlaying.pause(),window.callFrom=null,window.connectingToast=null,o.value?(this.subscriptions.users.whisper("CallAccepted",{to:i,from:e,id:t}),window.connectingToast=this.$toasted.success($t("chat.connecting_call"),{...this.$toastConfig.success,duration:5e5})):(this.setUserStatus(!1),o.dismiss===n.DismissReason.cancel?(this.subscriptions.users.whisper("CallDeclined",{to:i,from:e,id:t}),this.$toasted.error($t("chat.call_declined",{attribute:i.profile.name}),this.$toastConfig.error)):o.dismiss===n.DismissReason.timer&&this.$toasted.info($t("chat.call_missed",{attribute:i.profile.name}),this.$toastConfig.info))})},openCallWindow({from:i,to:e,id:t,meeting:s,callback:o}){this.meetingExternalLink=`/app/live/meetings/${s.uuid}?from=${i.uuid}&to=${e.uuid}&autoStart=true`,this.meetingLink=`/app/live/meetings/${s.uuid}?from=${i.uuid}&to=${e.uuid}&autoStart=true&iframe=true`,window.closeCallWindow=()=>{this.$toasted.info($t("chat.call_ended"),this.$toastConfig.info),this.showMeetingIframe=!1,this.meetingLink=null,this.subscriptions.users.whisper("CallDisconnected",{to:i,from:e,id:t}),window.callFrom=null,window.callUuid=null,this.setUserStatus(!1),window.closeCallWindow=null},window.meetingIframeLoaded=()=>{window.setTimeout(()=>{this.showMeetingIframe=!0,o&&_.isFunction(o)&&o(),window.meetingIframeLoaded=null},1e3)},window.openMeetingSeparately=()=>{const u=window.location.protocol+"//"+window.location.host+this.meetingExternalLink,a=document.createElement("a");a.href=u,a.hidden=!0,a.target="_blank",document.body.appendChild(a),this.subscriptions.users.whisper("CallMeetingCreated",{to:i,from:e,id:t,meeting:s}),this.showMeetingIframe=!1,this.meetingLink=null,window.callFrom=null,window.callUuid=null,this.setUserStatus(!1),window.setTimeout(()=>{a.click()},500),window.setTimeout(()=>{document.body.removeChild(a)},1e3),window.openMeetingSeparately=null}},openMeetingSeparately(){window.openMeetingSeparately&&window.openMeetingSeparately()},callAcceptedCallback({from:i,to:e,id:t}){e.uuid===this.uuid&&(window.callPlaying&&window.callPlaying.pause(),n.close(),window.connectingToast=this.$toasted.success($t("chat.connecting_call"),{...this.$toastConfig.success,duration:5e5}),this.Custom({url:"meetings",method:"post",data:{instant:!0,type:{uuid:"video_conference",name:"Video Conference"},maxParticipantCount:2,accessibleToMembers:!1,identifier:"",keepAlive:!1,isPam:!1,isPaid:!1,fee:0}}).then(s=>{s.meeting&&(this.setUserStatus("ON_CALL"),this.subscriptions.users.whisper("CallMeetingCreated",{to:i,from:e,id:t,meeting:s.meeting}),this.openCallWindow({from:i,to:e,id:t,meeting:s.meeting,callback:()=>{window.connectingToast&&(window.connectingToast.goAway(),this.$toasted.clear())}}))}).catch(s=>{window.connectingToast.goAway(),this.$toasted.clear(),formUtil.handleErrors(s),window.callFrom=null,window.callUuid=null,this.setUserStatus(!1)}))},callMeetingCreatedCallback({from:i,to:e,id:t,meeting:s}){e.uuid!==this.uuid||this.showMeetingIframe||window.setTimeout(()=>{n.close(),this.setUserStatus("ON_CALL"),this.openCallWindow({from:i,to:e,id:t,meeting:s,callback:()=>{window.connectingToast&&(window.connectingToast.goAway(),this.$toasted.clear())}})},200)},callCancelledNotification({from:i,to:e,id:t}){e.uuid===this.uuid&&(window.callPlaying&&window.callPlaying.pause(),n.close(),window.callFrom=null,window.callUuid=null,this.setUserStatus(!1),this.$toasted.info($t("chat.call_cancelled"),this.$toastConfig.info))},callDeclinedNotification({from:i,to:e,id:t}){e.uuid===this.uuid&&(window.callPlaying&&window.callPlaying.pause(),n.close(),window.callFrom=null,window.callUuid=null,this.setUserStatus(!1),this.$toasted.error($t("chat.call_declined_by",{attribute:i.profile.name}),this.$toastConfig.error))},callDroppedNotification({from:i,to:e}){window.callPlaying&&window.callPlaying.pause(),n.close(),this.setUserStatus(!1),i.uuid===this.uuid?(window.callTo=null,window.callUuid=null,this.$toasted.error($t("chat.error_calling",{attribute:i.profile.name}),this.$toastConfig.error)):e.uuid===this.uuid&&(window.callFrom=null,window.callUuid=null,this.$toasted.error($t("chat.error_connecting",{attribute:i.profile.name}),this.$toastConfig.error))},callDisconnectedNotification({from:i,to:e}){window.callFrom=null,window.callUuid=null,this.setUserStatus(!1)},beforeUnload(i){window.callFrom&&this.subscriptions.users.whisper("CallDropped",{from:window.callFrom}),window&&window.Echo&&(window.Echo.leave("Users"),window.Echo.leave(`User.${this.loggedInUser.uuid}`))},windowBlurred(){this.isWindowFocused=!1},windowFocused(){this.isWindowFocused=!0},updateNotificationSubscription(i){const e=i.getKey("p256dh"),t=i.getKey("auth"),s=(PushManager.supportedContentEncodings||["aesgcm"])[0],o={endpoint:i.endpoint,publicKey:e?btoa(String.fromCharCode.apply(null,new Uint8Array(e))):null,authToken:t?btoa(String.fromCharCode.apply(null,new Uint8Array(t))):null,contentEncoding:s};this.Custom({url:"users/subscriptions",method:"post",data:o}).then(u=>{})}},mounted(){window.Echo||h(),window.Echo&&window.EchoOpts&&(window.EchoOpts.subscriptions.users=window.Echo.join("Users"),window.EchoOpts.subscriptions.userPrivate=window.Echo.private(`User.${this.loggedInUser.uuid}`),this.subscriptions={users:window.EchoOpts.subscriptions.users,userPrivate:window.EchoOpts.subscriptions.userPrivate},this.ResetTotalUnreadCount(),this.ResetLiveUsers(),this.subscriptions.userPrivate.listen("ChatMessageSentToUser",this.newMessageReceived),this.subscriptions.users.here(this.afterJoiningUsersChannel).joining(this.userIsOnline).leaving(this.userIsOffline).listenForWhisper("SetUserStatus",this.updateOnlineUser).listenForWhisper("IncomingCall",this.incomingCallNotification).listenForWhisper("CallCancelled",this.callCancelledNotification).listenForWhisper("CallDeclined",this.callDeclinedNotification).listenForWhisper("CallDropped",this.callDroppedNotification).listenForWhisper("CallDisconnected",this.callDisconnectedNotification).listenForWhisper("CallAccepted",this.callAcceptedCallback).listenForWhisper("CallMeetingCreated",this.callMeetingCreatedCallback),this.meeting||this.GetRooms({...this.roomsPageMeta,lastItemUuid:null}),c.$off("START_CHAT_WITH",this.startChatWith),c.$on("START_CHAT_WITH",this.startChatWith)),console.log("App Timezone - ",this.configs.system.timezone)},created(){if(window.addEventListener("beforeunload",this.beforeUnload),window.addEventListener("blur",this.windowBlurred),window.addEventListener("focus",this.windowFocused),"serviceWorker"in navigator&&"PushManager"in window){let i;navigator.serviceWorker.ready.then(e=>(i=e,e.pushManager.getSubscription())).then(e=>{const t=this.configs.notification&&this.configs.notification.vapidPublicKey?this.configs.notification.vapidPublicKey:null;if(e&&e.endpoint)this.updateNotificationSubscription(e);else if(t){const s=p(t);i.pushManager.subscribe({userVisibleOnly:!0,applicationServerKey:s}).then(o=>{this.updateNotificationSubscription(o)}).catch(o=>{})}})}},beforeDestroy(){window.callTo&&(this.subscriptions.users.whisper("CallDropped",{from:window.callTo}),window.callPlaying&&window.callPlaying.pause(),n.close(),window.callTo=null,window.callUuid=null),window.callFrom&&(this.subscriptions.users.whisper("CallDropped",{from:window.callFrom}),window.callPlaying&&window.callPlaying.pause(),n.close(),window.callFrom=null,window.callUuid=null),window.Echo&&(window.EchoOpts&&(window.EchoOpts.subscriptions.users=null,window.EchoOpts.subscriptions.privateUser&&(window.EchoOpts.subscriptions.privateUser.stopListening("ChatMessageSentToUser"),window.EchoOpts.subscriptions.privateUser=null),window.EchoOpts.subscriptions.chatRoom&&(window.EchoOpts.subscriptions.chatRoom.stopListening("ChatMessageSentToRoom"),window.EchoOpts.subscriptions.chatRoom=null)),this.subscriptions={},window.Echo.leave("Users"),window.Echo.leave(`User.${this.loggedInUser.uuid}`))},destroyed(){c.$off("START_CHAT_WITH",this.startChatWith),window.removeEventListener("beforeunload",this.beforeUnload),window.removeEventListener("blur",this.windowBlurred),window.removeEventListener("focus",this.windowFocused)}};export{T as l};
